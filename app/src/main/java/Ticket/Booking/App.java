/*
 * This source file was generated by the Gradle 'init' task
 */
package Ticket.Booking;

import Ticket.Booking.entities.Train;
import Ticket.Booking.entities.User;
import Ticket.Booking.services.TrainService;
import Ticket.Booking.services.UserBookingService;
import Ticket.Booking.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;
import java.util.Scanner;

public class App {
    public static void main(String[] args) throws IOException {
        System.out.println("Running Train Booking System");
        Scanner sc = new Scanner(System.in);
        int option = 0;
        Train trainSelectedForBooking = new Train();
        /// try to load user if not loaded then exit
        System.out.println("Current working dir: " + System.getProperty("user.dir"));
        UserBookingService userBookingService;
        try {
             userBookingService = new UserBookingService();
        } catch (IOException e) {
            System.out.println("there is something wrong !!" + e);
            return;
        }

        System.out.println("choose your options (1 to 7) !!");
        System.out.println("1: Sign up");
        System.out.println("2: Login");
        System.out.println("3: Fetch Bookings");
        System.out.println("4: Search Trains");
        System.out.println("5: Book a  Seat");
        System.out.println("6: cancel Booking");
        System.out.println("7: Exit App ");
        option = sc.nextInt();
        switch (option) {
            case 1:
                System.out.println("enter the Username to signup ");
                String nameToSignup = sc.next();
                System.out.println("enter the Password to signup ");
                String passwordToSignup = sc.next();
                User userToSignup = new User(UUID.randomUUID().toString(), nameToSignup, passwordToSignup, UserServiceUtil.HashedPassword(passwordToSignup),
                        new ArrayList<>());
                userBookingService.signup(userToSignup);
                break;

            case 2:
                System.out.println("enter the Username to Login ");
                String nameToLogin = sc.next();
                System.out.println("enter the Password to Login ");
                String passwordToLogin = sc.next();
                User userToLogin = new User(UUID.randomUUID().toString(), nameToLogin, passwordToLogin, UserServiceUtil.HashedPassword(passwordToLogin),
                        new ArrayList<>());
                try {
                    userBookingService = new UserBookingService(userToLogin);
                } catch (IOException ex) {
                    System.out.print("Error in App");
                    return;
                }
                break;
            case 3:
                System.out.println("Fetching user Booking !!");
                userBookingService.fetchBooking();
                break;
            case 4:
                    System.out.println("Enter the source of Train");
                    String Source = sc.next();
                    System.out.println("Enter the Destination of Train");
                    String Destination = sc.next();
                    List<Train> trains = userBookingService.getTrain(Source,Destination);
                    int idx = 1;
                    for(Train t : trains){
                        System.out.println(idx+" Train Id : " + t.getTrainId());
                        for(Map.Entry<String,String> entry:t.getStationTimes().entrySet()){
                            System.out.println("Station " + entry.getKey() + "Time " + entry.getValue());
                        }
                    }
                    System.out.println("Select a train by typing 1,2,3,...");
                    trainSelectedForBooking = trains.get(sc.nextInt());
                    break;
            case 5:
                System.out.println("Select the seat Out of Seats Available");
                List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                for (List<Integer> row: seats){
                    for (Integer val: row){
                        System.out.print(val+" ");
                    }
                    System.out.println();
                }
                System.out.println("Select the seat by typing the row and column");
                System.out.println("Enter the row");
                int row = sc.nextInt();
                System.out.println("Enter the column");
                int col = sc.nextInt();
                System.out.println("Booking your seat....");
                Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking, row, col);
                if(booked.equals(Boolean.TRUE)){
                    System.out.println("Booked! Enjoy your journey");
                }else{
                    System.out.println("Can't book this seat");
                }
                break;
            default:
                break;


        }


    }
}
